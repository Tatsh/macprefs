.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "MACPREFS" "1" "Apr 15, 2025" "0.3.4" "macprefs"
.SH NAME
macprefs \- macprefs v0.3.4
.SH COMMANDS
.SS prefs\-export
.sp
Export preferences.
.INDENT 0.0
.INDENT 3.5
.sp
.EX
prefs\-export [OPTIONS]
.EE
.UNINDENT
.UNINDENT
.sp
Options
.INDENT 0.0
.TP
.B \-K, \-\-deploy\-key <deploy_key>
Key for pushing to Git repository.
.UNINDENT
.INDENT 0.0
.TP
.B \-c, \-\-commit
Commit the changes with Git.
.UNINDENT
.INDENT 0.0
.TP
.B \-d, \-\-debug
Enable debug logging.
.UNINDENT
.INDENT 0.0
.TP
.B \-o, \-\-output\-directory <output_directory>
Where to store the exported data.
.UNINDENT
.SS macprefs\-install\-job
.sp
Job installer.
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macprefs\-install\-job [OPTIONS]
.EE
.UNINDENT
.UNINDENT
.sp
Options
.INDENT 0.0
.TP
.B \-K, \-\-deploy\-key <deploy_key>
Key for pushing to Git repository.
.UNINDENT
.INDENT 0.0
.TP
.B \-d, \-\-debug
Enable debug logging.
.UNINDENT
.INDENT 0.0
.TP
.B \-o, \-\-output\-directory <output_directory>
Where to store the exported data.
.UNINDENT
.SH LIBRARY
.INDENT 0.0
.TP
.B macprefs.plist2defaults.plist_to_defaults_commands(domain: str, root: ~collections.abc.Mapping[str, ~collections.abc.Mapping[str, ~typing.Any] | list[~typing.Any] | bool | int | float | str | ~datetime.datetime | bytes], domain_filter: ~collections.abc.Callable[[str], bool] | None = <function should_ignore_domain>, key_filter: ~collections.abc.Callable[[str, str], bool] | None = <function should_ignore_key>, *, inverse_filters: bool = False) -> \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterator'\fI\%Iterator\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link']
Given a \fBPlistRoot\fP, generate a series of \fBdefaults write\fP commands.
.UNINDENT
.INDENT 0.0
.TP
.B macprefs.processing.remove_data_fields(\fI\%root\fP: \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping'\fI\%Mapping\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link', \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping'\fI\%Mapping\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link', \X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/stdtypes.html#list'\fI\%list\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/functions.html#bool'\fI\%bool\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/functions.html#int'\fI\%int\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/functions.html#float'\fI\%float\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/datetime.html#datetime.datetime'\fI\%datetime\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/stdtypes.html#bytes'\fI\%bytes\fP\X'tty: link']) -> \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping'\fI\%Mapping\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link', \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping'\fI\%Mapping\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link', \X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/stdtypes.html#list'\fI\%list\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/functions.html#bool'\fI\%bool\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/functions.html#int'\fI\%int\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/functions.html#float'\fI\%float\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/datetime.html#datetime.datetime'\fI\%datetime\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/stdtypes.html#bytes'\fI\%bytes\fP\X'tty: link']
Clean up data fields from a \fBPlistRoot\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B macprefs.processing.remove_data_fields_list(\fI\%pl_list\fP: \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence'\fI\%Sequence\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping'\fI\%Mapping\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link', \X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/stdtypes.html#list'\fI\%list\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/functions.html#bool'\fI\%bool\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/functions.html#int'\fI\%int\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/functions.html#float'\fI\%float\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/datetime.html#datetime.datetime'\fI\%datetime\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/stdtypes.html#bytes'\fI\%bytes\fP\X'tty: link']) -> \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence'\fI\%Sequence\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping'\fI\%Mapping\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link', \X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/stdtypes.html#list'\fI\%list\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/functions.html#bool'\fI\%bool\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/functions.html#int'\fI\%int\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/functions.html#float'\fI\%float\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/datetime.html#datetime.datetime'\fI\%datetime\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/stdtypes.html#bytes'\fI\%bytes\fP\X'tty: link']
Clean up data fields from a \fBPlistList\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B macprefs.utils.is_simple(\fI\%x\fP: \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping'\fI\%Mapping\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link', \X'tty: link https://docs.python.org/3/library/stdtypes.html#list'\fI\%list\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping'\fI\%Mapping\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link', \X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/stdtypes.html#bytes'\fI\%bytes\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence'\fI\%Sequence\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#list'\fI\%list\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping'\fI\%Mapping\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link', \X'tty: link https://docs.python.org/3/library/typing.html#typing.Any'\fI\%Any\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/stdtypes.html#bytes'\fI\%bytes\fP\X'tty: link'] | \X'tty: link https://docs.python.org/3/library/collections.abc.html#collections.abc.ValuesView'\fI\%ValuesView\fP\X'tty: link'[\X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link']) -> \X'tty: link https://docs.python.org/3/library/functions.html#bool'\fI\%bool\fP\X'tty: link'
Check if a value is a simple type of value.
.UNINDENT
.INDENT 0.0
.TP
.B macprefs.utils.to_str(\fI\%x\fP: \X'tty: link https://docs.python.org/3/library/stdtypes.html#bytes'\fI\%bytes\fP\X'tty: link' | \X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link') -> \X'tty: link https://docs.python.org/3/library/stdtypes.html#str'\fI\%str\fP\X'tty: link'
Convert a value to a string for shell.
.UNINDENT
.SH TYPING
.INDENT 0.0
.IP \(bu 2
\fI\%Index\fP
.IP \(bu 2
\fI\%Module Index\fP
.IP \(bu 2
\fI\%Search Page\fP
.UNINDENT
.SH AUTHOR
Andrew Udvare <audvare@gmail.com>
.SH COPYRIGHT
2025
.\" Generated by docutils manpage writer.
.
