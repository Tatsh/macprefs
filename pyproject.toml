[tool.poetry]
name = "macprefs"
version = "0.3.3"
authors = ["Andrew Udvare <audvare@gmail.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: MacOS X",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS :: MacOS X",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: System :: Archiving :: Backup",
  "Topic :: System :: Systems Administration",
  "Topic :: Utilities",
  "Typing :: Typed"
]
description = "Command and library to export macOS preferences."
documentation = "https://macprefs.readthedocs.io/en/latest/"
include = ["man"]
keywords = ["command line", "macos", "preferences", "utilities"]
license = "MIT"
packages = [{ include = "macprefs" }]
readme = "README.md"
repository = "https://github.com/Tatsh/macprefs"

[tool.poetry.dependencies]
python = ">=3.10,<4"
click = "^8.1.7"
loguru = "^0.7.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
commitizen = "^3.10.0"
isort = "^5.12.0"
mypy = "^1.5.1"
rope = "^1.10.0"
ruff = "^0.0.291"
yapf = "^0.40.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
doc8 = "^1.1.1"
docutils = "^0.20.1"
esbonio = "^0.16.1"
restructuredtext-lint = "^1.4.0"
sphinx = "^7.2.6"
sphinx-click = "^5.0.1"
tomlkit = "^0.12.1"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
coveralls = "^3.3.1"
deepdiff = "^6.5.0"
mock = "^5.1.0"
pytest = "^7.4.2"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
types-mock = "^5.1.0.2"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry.scripts]
macprefs-install-job = "macprefs:install_job"
prefs-export = "macprefs:prefs_export"

[tool.commitizen]
tag_format = "v$version"
version_files = ["README.md", "man/macprefs.1", "package.json"]
version_provider = "poetry"

[tool.isort]
case_sensitive = true
combine_as_imports = true
from_first = true
line_length = 100
order_by_type = true
use_parentheses = true

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
disallow_subclassing_any = true
mypy_path = "./.stubs"
show_column_numbers = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.pytest.ini_options]
mock_use_standalone_module = true

[tool.rstcheck]
ignore_directives = ["automodule", "click", "include"]
recursive = true

[tool.ruff]
exclude = [
  ".bzr",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".ruff_cache",
  ".svn",
  ".tox",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules"
]
line-length = 100

[tool.yapf]
align_closing_bracket_with_visual_indent = true
allow_multiline_dictionary_keys = false
allow_multiline_lambdas = false
allow_split_before_dict_value = true
blank_line_before_class_docstring = false
blank_line_before_module_docstring = false
blank_line_before_nested_class_or_def = false
blank_lines_around_top_level_definition = 2
coalesce_brackets = true
column_limit = 100
continuation_align_style = "SPACE"
continuation_indent_width = 4
dedent_closing_brackets = false
disable_ending_comma_heuristic = false
each_dict_entry_on_separate_line = true
indent_dictionary_value = true
indent_width = 4
join_multiple_lines = true
no_spaces_around_selected_binary_operators = false
space_between_ending_comma_and_closing_bracket = false
spaces_around_default_or_named_assign = false
spaces_around_power_operator = true
spaces_before_comment = 2
split_all_comma_separated_values = false
split_arguments_when_comma_terminated = false
split_before_bitwise_operator = true
split_before_closing_bracket = true
split_before_dict_set_generator = true
split_before_dot = false
split_before_expression_after_opening_paren = false
split_before_first_argument = false
split_before_logical_operator = true
split_before_named_assigns = true
split_complex_comprehension = false
split_penalty_after_opening_bracket = 30
split_penalty_after_unary_operator = 10000
split_penalty_before_if_expr = 0
split_penalty_bitwise_operator = 300
split_penalty_comprehension = 80
split_penalty_excess_character = 7000
split_penalty_for_added_line_split = 30
split_penalty_import_names = 0
split_penalty_logical_operator = 300
use_tabs = false

[tool.yapfignore]
ignore_patterns = ["node_modules/**"]
